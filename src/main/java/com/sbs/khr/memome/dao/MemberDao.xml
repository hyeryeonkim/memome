<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sbs.khr.memome.dao.MemberDao">

	<insert id="join" useGeneratedKeys="true" keyProperty="id">
		INSERT
		INTO member
		SET regDate = NOW(),
		updateDate = NOW(),
		loginId =
		#{loginId},
		loginPw = #{loginPw},
		name = #{name},
		nickname = #{nickname},
		email = #{email}
	</insert>

	<select id="getLoginIdDupCount" resultType="int">
		SELECT COUNT(*) AS
		cnt
		FROM member
		WHERE loginId = #{loginId}
	</select>

	<select id="getNicknameDupCount" resultType="int">
		SELECT COUNT(*) AS
		cnt
		FROM member
		WHERE nickname = #{nickname}
	</select>
	
	<select id="getEmailDupCount" resultType="int">
		SELECT COUNT(*) AS
		cnt
		FROM member
		WHERE email = #{email}
	</select>
	
	<select id="getMemberByLoginId" resultMap="member">
		SELECT *
		FROM member
		WHERE loginId = #{loginId}
	</select>

	<select id="getMemberById" resultMap="member">
		SELECT *
		FROM member
		WHERE
		id = #{id}
	</select>

	<update id="memberDataUpdate">
		UPDATE member
		SET updateDate = NOW(),
		nickname =
		#{nickname},
		email = #{email}
		WHERE id = #{id}
	</update>


	<update id="passwordUpdate">
		UPDATE member
		SET updateDate = NOW(),
		loginPw =
		#{loginPw}
	</update>

	<select id="getMemberByNameAndEmail" resultMap="member">
		SELECT *
		FROM
		member
		WHERE name = #{name}
		AND email = #{email}
	</select>
	
	<select id="getMemberByLoginIdAndEmail" resultMap="member">
		SELECT *
		FROM
		member
		WHERE loginId = #{loginId}
		AND email = #{email}
	</select>
	
	<select id="getMemberByEmail" resultMap="member">
		SELECT *
		FROM
		member
		WHERE email = #{email}
	</select>
	
	<update id="saveTempPassword">
		UPDATE member
		SET updateDate = NOW(),
		loginPw = #{tempPassword}
		WHERE loginId = #{loginId}
		AND email = #{email}
	</update>
	
	
	<update id="accountDelete">
		UPDATE member
		SET updateDate = NOW(),
		delDate = NOW(),
		delStatus = 1		
		WHERE id = #{memberId}
	</update>
	
	
	
	
	<!-- extra__writer를 사용하기 위해서는 자동 매핑이 되지 않으므로 
	수동 매핑을 통해서 활용해야 한다.
	작성자를 extra__writer로 사용하기 때문에 resultMap으로 활용하는 것이다. -->
	<resultMap type="Member" id="member">
		<id property="id" column="id"	 />
		<id property="regDate" column="regDate" />
		<id property="updateDate" column="updateDate" />
		<id property="delStatus" column="delStatus" />
		<id property="derDate" column="derDate" />
		<id property="loginId" column="loginId" />
		<id property="loginPw" column="loginPw" />
		<id property="name" column="name" />
		<id property="nickname" column="nickname" />
		<id property="email" column="email" />
		<association property="extra" javaType="map">
		</association>
		
	</resultMap>
	
	
	
</mapper>