<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sbs.khr.memome.dao.ArticleDao">

	<insert id="write" useGeneratedKeys="true" keyProperty="id">
		INSERT
		INTO article
		SET regDate = NOW(),
		updateDate = NOW(),
		title = #{title},
		body = #{body},
		displayStatus = #{displayStatus},
		memberId = #{memberId},
		boardId =
		#{boardId}
	</insert>

	<select id="getBoardByCode" resultType="Board">
		SELECT *
		FROM board
		WHERE
		code = #{boardCode}
	</select>

	<select id="getBoardByBoardId" resultType="Board">
		SELECT *
		FROM board
		WHERE
		id = #{boardId}
	</select>
	
	
	<select id="getForAccountDeleteArticlesByMemberId" resultMap="article">
		SELECT *
		FROM article
		WHERE memberId = #{memberId}
		AND delStatus = 0
	</select>



	<!-- ON 은 조건을 의미(원하는 값) -->
	<select id="getForPrintAllArticles" resultMap="article">
		SELECT A.*,
		M.nickname AS extra__writer
		FROM article AS A
		INNER JOIN member AS M
		ON
		A.memberId = M.id
		WHERE A.displayStatus = 1
		AND A.delStatus = 0
		AND	A.boardId IN (3, 4)
		AND A.memberId NOT IN(#{memberId})
		AND M.delStatus = 0
		ORDER BY A.id
		DESC
		LIMIT #{limitFrom}, #{itemsInAPage}
	</select>






	<!-- ON 은 조건을 의미(원하는 값) -->
	<select id="getForPrintArticles" resultMap="article">
		SELECT A.*,
		M.nickname AS extra__writer
		FROM article AS A
		INNER JOIN member AS M
		ON
		A.memberId = M.id
		WHERE A.displayStatus = 1
		AND A.boardId = #{id}
		AND
		A.delStatus= 0
		AND M.delStatus = 0
		ORDER BY A.id DESC
		LIMIT #{limitFrom}, #{itemsInAPage}
	</select>


	<!-- ON 은 조건을 의미(원하는 값) -->
	<select id="getForPrintArticlesByMemberId" resultMap="article">
		SELECT A.*,
		M.nickname AS extra__writer
		FROM article AS A
		INNER JOIN member AS M
		ON
		A.memberId = M.id
		WHERE A.displayStatus IN (0, 1)
		AND A.memberId = #{memberId}
		AND A.delStatus = 0
		AND A.boardId IN (3, 4)
		AND M.delStatus = 0
		ORDER BY A.id DESC
		LIMIT
		#{limitFrom}, #{itemsInAPage}
	</select>



	<!-- ON 은 조건을 의미(원하는 값) -->
	<select id="getForPrintArticlesByMemo" resultMap="article">
		SELECT A.*,
		M.nickname AS extra__writer
		FROM article AS A
		INNER JOIN member AS M
		ON A.memberId = M.id
		WHERE A.displayStatus = 1
		AND A.delStatus = 0
		AND M.delStatus = 0
		ORDER BY A.id DESC
	</select>



	<!-- ON 은 조건을 의미(원하는 값) -->
	<select id="getForPrintArticleById" resultMap="article">
		SELECT A.*,
		M.nickname AS extra__writer
		FROM article AS A
		INNER JOIN member AS M
		ON
		A.memberId = M.id
		WHERE A.displayStatus IN ( 0, 1)
		AND A.id = #{id}
		AND	A.delStatus = 0
		AND M.delStatus = 0
	</select>

	<update id="memoModify">
		UPDATE article
		<set>
			updateDate = NOW(),
			<if test="title != null">title = #{title},</if>
			<if test="body != null">body = #{body},</if>
			<if test="displayStatus != null">displayStatus = #{displayStatus}</if>
		</set>
		WHERE id = #{id}
	</update>

	<update id="articleModify">
		UPDATE article
		<set>
			updateDate = NOW(),
			<if test="title != null">title = #{title},</if>
			<if test="body != null">body = #{body}</if>
		</set>
		WHERE id = #{id}
	</update>

	<update id="memoDelete">
		UPDATE article
		SET delDate = NOW(),
		delStatus = 1
		WHERE
		memberId = #{memberId}
		AND id = #{id}
	</update>

	<select id="getForPrintArticleByRelId" resultMap="article">
		SELECT A.*,
		M.nickname AS extra__writer
		FROM article AS A
		INNER JOIN member AS M
		ON
		A.memberId = M.id
		WHERE A.displayStatus = 1
		AND A.memberId =
		#{memberId},
		AND A.delStatus = 0
		AND A.boardId IN (3, 4)
		AND A.id = #{relId}
		AND M.delStatus = 0
		ORDER BY
		A.id DESC
	</select>

	<!-- AND A.boardId = #{boardId} 이거는 뺏음. memoYOU에서 입력하면 boardId를 기억해버려서 불러오는데 
		문제가 생김 -->
	<select id="getArticlesContainsTagSearchResultByMemberId"
		resultMap="article">
		SELECT A.*,
		GROUP_CONCAT(HT2.tag) AS extra__hashTagsStr
		FROM
		article AS A
		INNER JOIN hashtag AS HT2
		ON A.id = HT2.relId
		INNER JOIN
		hashtag AS HT
		ON A.id = HT.relId
		WHERE HT.tag = #{tag}
		AND HT.relTypeCode
		= 'article'
		AND A.displayStatus IN (0, 1)
		AND A.memberId = #{memberId}
		AND
		A.delStatus = 0
		AND A.boardId IN (3,4)
		GROUP BY A.id
		ORDER BY A.id DESC
		LIMIT #{limitFrom}, #{itemsInAPage}
	</select>


	<select
		id="getArticlesContainsTagSearchResultByMemberIdForMemoYou"
		resultMap="article">
		SELECT A.*,
		GROUP_CONCAT(HT2.tag) AS extra__hashTagsStr
		FROM
		article AS A
		INNER JOIN hashtag AS HT2
		ON A.id = HT2.relId
		INNER JOIN
		hashtag AS HT
		ON A.id = HT.relId
		WHERE HT.tag = #{tag}
		AND HT.relTypeCode
		= 'article'
		AND A.displayStatus = 1
		AND A.memberId NOT IN(#{memberId})
		AND A.boardId NOT IN(1, 2, 6)
		AND A.delStatus = 0
		GROUP BY A.id
		ORDER BY A.id DESC
		LIMIT #{limitFrom},
		#{itemsInAPage}
	</select>

	<select id="getForPrintArticleContainsTags" resultMap="article">
		SELECT
		A.*,
		GROUP_CONCAT(HT2.tag) AS extra__hashTagsStr
		FROM
		article AS A
		INNER
		JOIN hashtag AS HT2
		ON A.id = HT2.relId
		INNER JOIN
		hashtag AS HT
		ON A.id =
		HT.relId
		WHERE HT.tag = #{tag}
		AND HT.relTypeCode
		= 'article'
		AND
		A.displayStatus = 1
		AND A.delStatus = 0
		AND A.boardId = #{boardId}
		GROUP
		BY A.id
		ORDER BY A.id DESC
		LIMIT #{limitFrom}, #{itemsInAPage}
	</select>


	<!-- <select id="getForPrintAllArticleContainsTags" resultMap="article"> 
		SELECT A.*, GROUP_CONCAT(HT2.tag) AS extra__hashTagsStr FROM article AS A 
		INNER JOIN hashtag AS HT2 ON A.id = HT2.relId INNER JOIN hashtag AS HT ON 
		A.id = HT.relId WHERE HT.tag = #{tag} AND HT.relTypeCode = 'article' AND 
		A.displayStatus = 1 AND A.delStatus = 0 AND A.boardId = #{boardId} GROUP 
		BY A.id ORDER BY A.id DESC </select> -->


	<select id="getForPrintArticlesSearchCount" resultMap="article">
		SELECT
		A.*,
		GROUP_CONCAT(HT2.tag) AS extra__hashTagsStr
		FROM
		article AS A
		INNER
		JOIN hashtag AS HT2
		ON A.id = HT2.relId
		INNER JOIN
		hashtag AS HT
		ON A.id =
		HT.relId
		WHERE HT.tag = #{tag}
		AND HT.relTypeCode
		= 'article'
		AND
		A.displayStatus IN ( 0, 1)
		AND A.delStatus = 0
		AND A.boardId = #{boardId}
		GROUP
		BY A.id
		ORDER BY A.id DESC
	</select>




	<select id="getForPrintListArticlesCount" resultType="int">
		SELECT
		COUNT(*) AS cnt
		FROM article
		WHERE displayStatus = 1
		AND delStatus = 0
		AND boardId = #{boardId}
	</select>



	
	
	<select id="getForPrintMemoMeAndYouListArticlesCount"
		resultType="int">
		SELECT COUNT(*) AS cnt
		FROM article
		WHERE displayStatus = 1
		AND delStatus = 0
		AND boardId IN (3, 4)
	</select>

	<select id="getForPrintListArticlesCountFromMemberId"
		resultType="int">
		SELECT COUNT(*) AS cnt
		FROM article
		WHERE displayStatus IN ( 0, 1)
		AND delStatus = 0
		AND boardId = #{boardId}
		AND memberId = #{memberId}
	</select>

	<select id="getForPrintListArticlesCountRemoveMe"
		resultType="int">
		SELECT COUNT(*) AS cnt
		FROM article
		WHERE displayStatus = 1
		AND delStatus = 0
		AND boardId IN (3, 4)
		AND memberId NOT IN(#{memberId})
	</select>


	<select id="getForPrintArticlesSearchCountFromMemoYou"
		resultMap="article">
		SELECT A.*,
		GROUP_CONCAT(HT2.tag) AS extra__hashTagsStr
		FROM
		article AS A
		INNER JOIN hashtag AS HT2
		ON A.id = HT2.relId
		INNER JOIN
		hashtag AS HT
		ON A.id = HT.relId
		WHERE HT.tag = #{tag}
		AND HT.relTypeCode
		= 'article'
		AND A.displayStatus = 1
		AND A.delStatus = 0
		AND A.boardId IN
		(3, 4)
		AND A.memberId NOT IN(#{memberId})
		GROUP BY A.id
		ORDER BY A.id
		DESC
	</select>



	<select id="getForPrintArticlesSearchCountFromOtherMember"
		resultMap="article">
		SELECT A.*,
		GROUP_CONCAT(HT2.tag) AS extra__hashTagsStr
		FROM
		article AS A
		INNER
		JOIN hashtag AS HT2
		ON A.id = HT2.relId
		INNER JOIN
		hashtag AS HT
		ON A.id =
		HT.relId
		WHERE HT.tag = #{tag}
		AND HT.relTypeCode
		= 'article'
		AND
		A.displayStatus = 1
		AND A.memberId = #{memberId}
		AND
		A.delStatus = 0
		AND
		A.boardId IN (3,4)
		GROUP BY A.id
		ORDER BY A.id DESC
	</select>

	<select id="getForPrintArticlesByMemberIdFromBoardIdYouAndMe"
		resultType="int">
		SELECT COUNT(*) AS cnt
		FROM article
		WHERE displayStatus = 1
		AND delStatus = 0
		AND boardId IN (3, 4)
		AND memberId = #{memberId}

	</select>

	<select id="getForPrintAllArticlesByBoardId" resultMap="article">
		SELECT *
		FROM article
		WHERE displayStatus = 1
		AND delStatus = 0
		AND boardId = #{boardId}
		

	</select>






	<!-- extra__writer를 사용하기 위해서는 자동 매핑이 되지 않으므로 수동 매핑을 통해서 활용해야 한다. 작성자를 extra__writer로 
		사용하기 때문에 resultMap으로 활용하는 것이다. -->
	<resultMap type="Article" id="article">
		<id property="id" column="id" />
		<id property="regDate" column="regDate" />
		<id property="updateDate" column="updateDate" />
		<id property="delStatus" column="delStatus" />
		<id property="derDate" column="derDate" />
		<id property="displayStatus" column="displayStatus" />
		<id property="title" column="title" />
		<id property="body" column="body" />
		<id property="memberId" column="memberId" />
		<id property="boardId" column="boardId" />
		<association property="extra" javaType="map">
			<id property="writer" column="extra__writer" />
			<id property="hashTagsStr" column="extra__hashTagsStr" />
		</association>
	</resultMap>


</mapper>
